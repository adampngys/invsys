@model IEnumerable<LogicUniversityApp.ViewModel.RetrievalViewModel>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/Scripts/jquery-ui.min.js"></script>

@section scripts{

    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>

    <script>
        $(function () {
            $("#date1").datepicker({
                dateFormat: "yy/mm/dd",
                showButtonPanel: true,
                changeMonth: true,
                changeYear: true,
                gotoCurrent: true,
                onSelect: function (date) {
                    var d1 = $('#date1').datepicker('getDate');
                    var myDate = $.datepicker.formatDate('yy/mm/dd', d1);

                    // get date here
                    window.location.href = '@Url.Action("Index", "Retrieval")' + '?DueDate=' + myDate;
                }
            });
        });
    </script>
}

<h2>RETRIEVAL</h2>

<input id="date1" name="DueDate" class="form-control" value="@ViewBag.myDate" />

<table class="table table-striped table-hover">
    <tr>
        <th class="text-center text-info">
            @Html.DisplayNameFor(model => model.description)
        </th>
        <th class="text-center text-info">
            @Html.DisplayNameFor(model => model.location)
        </th>
        <th class="text-center text-info">
            @Html.DisplayNameFor(model => model.balance)
        </th>
        <th class="text-center text-info">
            @Html.DisplayNameFor(model => model.quantityTotalNeed)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td align="center">
                @Html.DisplayFor(modelItem => item.description)
            </td>
            <td align="center">
                @Html.DisplayFor(modelItem => item.location)
            </td>
            <td align="center">
                @Html.DisplayFor(modelItem => item.balance)
            </td>
            <td align="center">
                @Html.DisplayFor(modelItem => item.quantityTotalNeed)
            </td>
            <td align="center">
                @Html.ActionLink("Edit", "Edit", new { itemNo = item.itemNo, DueDate = item.DueDate })
            </td>
        </tr>
    }
</table>

