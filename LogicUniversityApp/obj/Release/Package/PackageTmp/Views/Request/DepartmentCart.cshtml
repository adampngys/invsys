@model List<LogicUniversityApp.ViewModel.RequestViewModel>

@{
    ViewBag.Title = "DepartmentCart";
}

@if (ViewBag.requestId == null)
{
    <h3>CART - NEW REQUEST</h3>
}
else
{
    <h3>CART - REQUEST @ViewBag.requestId</h3>
}

@using (Html.BeginForm("DepartmentCart", "Request", FormMethod.Post))
{
    <p>
        @Html.ActionLink("Add Item", "Store", new { requestId = ViewBag.requestId as object }, new { @class = "btn btn-primary" })
    </p>

    @Html.Hidden("requestId", @ViewBag.requestId as object)

    if (Model != null && Model.Count() > 0)
    {
        <table class="table table-striped table-hover">
            <tr>
                <th class="text-center text-info">
                    @Html.DisplayNameFor(x => x[0].category)
                </th>
                <th class="text-center text-info">
                    @Html.DisplayNameFor(x => x[0].description)
                </th>
                <th class="text-center text-info">
                    @Html.DisplayNameFor(x => x[0].stdPrice)
                </th>
                <th class="text-center text-info">
                    @Html.DisplayNameFor(x => x[0].quantityNeed)
                </th>
                <th class="text-center text-info">
                    @Html.DisplayNameFor(x => x[0].unitMeasure)
                </th>
                <th></th>
            </tr>

            @for (int i = 0; i < Model.Count; i++)
            {
                @Html.HiddenFor(x => x[i].index_detail)
                @Html.HiddenFor(x => x[i].itemNo)
                @Html.HiddenFor(x => x[i].requestId)
                <tr>
                    <td align="center">
                        @Html.HiddenFor(x => x[i].category)
                        @Html.DisplayFor(x => x[i].category)
                    </td>
                    <td align="center">
                        @Html.HiddenFor(x => x[i].description)
                        @Html.DisplayFor(x => x[i].description)
                    </td>
                    <td align="center">
                        @Html.HiddenFor(x => x[i].stdPrice)
                        @Html.DisplayFor(x => x[i].stdPrice)
                    </td>
                    <td align="center">
                        @Html.EditorFor(x => x[i].quantityNeed, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(x => x[i].quantityNeed, "", new { @class = "text-danger" })
                    </td>
                    <td align="center">
                        @Html.HiddenFor(x => x[i].unitMeasure)
                        @Html.DisplayFor(x => x[i].unitMeasure)
                    </td>
                    <td align="center">
                        <button class="btn btn-default" name="btn_itemNo" value="@Model[i].itemNo">
                            <span class="glyphicon glyphicon-minus-sign"></span>
                        </button>
                    </td>
                </tr>
            }
        </table>

        <input type="submit" class="btn btn-info pull-right" value="Submit" />
    }
}
